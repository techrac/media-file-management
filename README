# Media File Management Tool

A Python tool for organizing and managing media files (photos and videos) by extracting metadata and performing various organizational tasks.

## Features

- **Rename Media Files**: Automatically rename photos and videos using timestamps extracted from EXIF metadata
- **Find and Delete Duplicates**: Identify duplicate files using SHA256 checksums and remove them
- **Flatten Directory Structure**: Move all files from subdirectories to the root folder
- **Timezone Support**: Handle timezone conversion for files with GPS coordinates or specify a default timezone
- **Both CLI and GUI**: Available as both command-line tool and graphical user interface
- **Dry Run Mode**: Preview changes before actually modifying files
- **Debug Mode**: Verbose output for troubleshooting

## How It Works

The tool reads EXIF metadata from media files to extract creation timestamps. It prioritizes different metadata sources in this order:
1. EXIF creation date (local time)
2. QuickTime creation date with timezone info
3. QuickTime creation date converted from UTC using GPS coordinates
4. QuickTime creation date converted from UTC using specified timezone
5. QuickTime creation date (assumed local time)

Files are renamed using the format: `YYYYMMDD_HHMMSS-original_name.extension`

## Usage

### Command Line Interface

```bash
# Basic usage - rename files with dry run
python main.py /path/to/photos --rename --dry-run

# Full workflow with all features
python main.py /path/to/photos --flatten --delete-dups --rename --timezone "Europe/Paris"

# Available options:
# --rename        Rename media files using metadata timestamps
# --delete-dups   Find and delete duplicate files
# --flatten       Move all files to root directory
# --dry-run       Preview changes without modifying files
# --debug         Verbose output
# --timezone      Specify timezone for UTC conversion
```

### Graphical User Interface

```bash
python gui.py
```

The GUI provides a user-friendly interface with:
- Folder browser
- Checkboxes for each action
- Timezone selector
- Command preview
- Real-time output console
- Settings persistence

## Development

```bash
# activate the virtual env (if using one)
source ./.venv/bin/activate

# run command line version (debug from IDE)
python main.py

# run GUI version (debug from IDE)
python gui.py

# package the Mac app (with cx_freeze)
python setup.py bdist_mac
```

The build process will:
1. Create the `MediaTool.app` bundle in `build/`
2. Automatically create a timestamped distribution zip (e.g., `MediaTool_20251002_152502.zip`)
3. The zip file is ready for distribution and contains the complete app bundle

## Installation

### From Pre-built Release
1. Download the latest `MediaTool_YYYYMMDD_HHMMSS.zip` from releases
2. Extract the zip file
3. Drag `MediaTool.app` to your Applications folder
4. Double-click to run (you may need to allow it in System Preferences > Security & Privacy)

### From Source
1. Install Python 3.12+ and required dependencies: `pip install -r requirements.txt`
2. Build the app: `python setup.py bdist_mac`
3. Find the app in `build/MediaTool.app` and the distribution zip in `build/`